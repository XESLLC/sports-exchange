type Tournament {
  id: ID!
  name: String!
  leagueId: ID!
  createdAt: String!
}

type TournamentTeam {
  id: ID!
  tournamentId: ID!
  teamId: ID!
  price: Float!
  seed: Int!
}

input TournamentInput {
  name: String!
  leagueId: String!
}

input UpdateTournamentInput {
  id: ID!
  name: String!
  leagueId: String!
}

input DeleteTournamentInput {
  id: ID!
}

input TournamentTeamInput {
    price: Float!
    teamId: ID!
    seed: Int!
    tournamentId: ID!
}

type Query {
  tournaments(leagueId: ID!): [Tournament]
  tournament(id: ID!): Tournament
}

type Mutation {
  createTournament(input: TournamentInput!): Tournament!
  createTournamentTeam(input: TournamentTeamInput!): TournamentTeam!
  updateTournament(input: UpdateTournamentInput!): ID!
  deleteTournament(input: DeleteTournamentInput!): ID
}
